# Generated by Django 4.2 on 2024-07-18 12:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AmoCrmWebhookModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, verbose_name='ответ на вебхук')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
            ],
            options={
                'verbose_name': 'Webhook Amo crm',
                'verbose_name_plural': 'Webhook Amo crm',
            },
        ),
        migrations.CreateModel(
            name='PersonalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.CharField(max_length=255, unique=True, verbose_name='id пользователя в телеграмм')),
                ('first_name', models.CharField(db_index=True, max_length=100, verbose_name='Имя пользователя')),
                ('franchise_name', models.CharField(max_length=100, verbose_name='Наименование франшизы')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Номер телефона')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
            ],
            options={
                'verbose_name': 'Персональные данные',
                'verbose_name_plural': 'Персональные данные',
            },
        ),
        migrations.CreateModel(
            name='RefreshAccessToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField(verbose_name='Токен доступа')),
                ('refresh_token', models.TextField(verbose_name='Токен обновления')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
            ],
            options={
                'verbose_name': 'Токен доступа и обновления',
                'verbose_name_plural': 'Токен доступа и обновления',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_filed', models.CharField(max_length=255, verbose_name='Название поля для телеграм')),
                ('username', models.CharField(max_length=100, verbose_name='Название пользователя jira')),
                ('api_token', models.TextField(verbose_name='Токен аккаунта jira')),
                ('jira_url', models.URLField(verbose_name='Ссылка на базовый путь проекта')),
                ('amo_id', models.TextField(verbose_name='ID интеграций')),
                ('amo_secret_key', models.TextField(verbose_name='Секретный ключь')),
                ('amo_auth_key', models.TextField(verbose_name='Код авторизаций')),
                ('redirect_url', models.URLField(verbose_name='Путь перенаправления')),
                ('subdomain', models.CharField(max_length=120, verbose_name='Субдомен в АМО СРМ')),
            ],
            options={
                'verbose_name': 'Настройка',
                'verbose_name_plural': 'Настойки',
            },
        ),
        migrations.CreateModel(
            name='TestModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.TextField(verbose_name='Данные')),
            ],
            options={
                'verbose_name': " объект 'Тест'",
                'verbose_name_plural': 'Тесты',
            },
        ),
        migrations.CreateModel(
            name='WebhookIssueCreated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_id', models.CharField(max_length=255, verbose_name='Идентификатор')),
                ('project_name', models.TextField(verbose_name='Название проекта')),
                ('status', models.CharField(blank=True, max_length=255, null=True, verbose_name='Статус')),
                ('description', models.TextField(blank=True, verbose_name='ответ на вебхук')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
            ],
            options={
                'verbose_name': 'Создание проблемы',
                'verbose_name_plural': 'Создание проблемы',
            },
        ),
        migrations.CreateModel(
            name='WebhookIssueDeleted',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_id', models.CharField(max_length=255, verbose_name='Идентификатор')),
                ('project_name', models.TextField(verbose_name='Название проекта')),
                ('status', models.CharField(blank=True, max_length=255, null=True, verbose_name='Статус')),
                ('description', models.TextField(blank=True, verbose_name='ответ на вебхук')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
            ],
            options={
                'verbose_name': 'Проблема удалена',
                'verbose_name_plural': 'Проблема удалена',
            },
        ),
        migrations.CreateModel(
            name='WebhookIssueUpdated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_id', models.CharField(max_length=255, verbose_name='Идентификатор')),
                ('project_name', models.TextField(verbose_name='Название проекта')),
                ('status', models.CharField(blank=True, max_length=255, null=True, verbose_name='Статус')),
                ('description', models.TextField(blank=True, verbose_name='ответ на вебхук')),
                ('timestamp', models.TextField(blank=True, null=True, verbose_name='Дата и время создания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
            ],
            options={
                'verbose_name': 'Проблема обновлена',
                'verbose_name_plural': 'Проблема обновлена',
            },
        ),
        migrations.CreateModel(
            name='SupportSynchronization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_messages', models.TextField(verbose_name='Детали')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('personal_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.personaldata', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': " объект 'Синхранизация'",
                'verbose_name_plural': 'Синхранизаций',
            },
        ),
        migrations.CreateModel(
            name='SupportGetCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255, verbose_name='Email')),
                ('study_type', models.CharField(max_length=60, verbose_name='Вид обучения')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('personal_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.personaldata', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': " объект 'Get Course'",
                'verbose_name_plural': 'Get Courses',
            },
        ),
        migrations.CreateModel(
            name='SupportConsultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_problem', models.TextField(verbose_name='Описание проблемы')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('personal_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.personaldata', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': " объект 'Консультация'",
                'verbose_name_plural': 'Консультации',
            },
        ),
        migrations.CreateModel(
            name='SupportBug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bug_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название бага')),
                ('description_and_scenario', models.TextField(blank=True, null=True, verbose_name='Описание и сценарий')),
                ('additional_information', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация')),
                ('app_version', models.TextField(blank=True, null=True, verbose_name='Версия приложения')),
                ('personal_account_access', models.TextField(blank=True, null=True, verbose_name='Доступ от личного кабинета')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('personal_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.personaldata', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': " объект 'Баг'",
                'verbose_name_plural': 'Баги',
            },
        ),
        migrations.CreateModel(
            name='ResponseTimeDelete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leads_id', models.CharField(max_length=255, verbose_name='Идентификатор сделки')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': " объект 'Удаленная сделка AMO CRM'",
                'verbose_name_plural': 'Удаленные сделки AMO CRM',
            },
        ),
        migrations.CreateModel(
            name='ResponseTimeCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leads_id', models.CharField(max_length=255, verbose_name='Идентификатор сделки')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': " объект 'Созданная сделка AMO CRM'",
                'verbose_name_plural': 'Созданные сделки AMO CRM',
            },
        ),
        migrations.CreateModel(
            name='QualityControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('rating', models.PositiveIntegerField(verbose_name='Оценка качества')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': " объект 'Контроль качества'",
                'verbose_name_plural': 'Контроль качества',
            },
        ),
    ]
